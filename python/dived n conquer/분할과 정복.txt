분할 정복?
분할 정복이란 문제를 나눌 수 없을때까지 나누어서 각각을 풀면서
합변하여 문제의 답을 얻는 알고리즘

1) dived - 문제가 분할일 경우 -> 2개 이상의 문제로 나눈다.
2) conquer - if 나누어진 문제 분할이 가능
		(1) 수행
	     else 문제해결
3) combine - conquer한 문제들을 통합하여 문제의 답을 도출

DIVED 과정이 중요!!

1. 병합정렬 (Merge Sort) - 시간 O(NlogN) 공간 O(N)
1) 데이터 집합의 크키가 0 || 2 --> 정렬완. else 아래로 진행
2) 데이터 집합을 반으로 나눈다.
3) 원래 같은 집합에서 나뉘어져 나온 데이터 집합 둘을 병합하여 하나의 데이터 집합으로 만든다. 
(단, 병합 시 데이터 집합의 원소는 순서에 맞춰 정렬)
4) 1이 성립될때까지 3을 반복

EX)
[7 2 5 9 6 4 1 3 8]
[7 2 5 9 6] [4 1 3 8]
[7 2 5] [9 6] [4 1] [3 8]
[7 2] [5] [9] [6] [4] [1] [3] [8]
[7] [2] [5] [9] [6] [4] [1] [3] [8]
[2 7].... 병합 진행

how to merge?

A [2 5 6 7 9]
B [1 3 4 8]
C [] -> length = 9

- A[A_idx=0] < B[B_idx=0] ? A[0] : B[0]
A [2 5 6 7 9]
B [1 3 4 8]
C [1] -> length = 9
B_idx++

- A[A_idx=0] < B[B_idx=1] ? A[A_idx] : B[B_idx]
A [2 5 6 7 9]
B [1 3 4 8]
C [1 2] -> length = 9
A_idx++
.... 반복

2. 거듭제곱
n 거듭 제곱 = 자신을 n번 곱하는 것 --> O(N)
C^8 = ((C^2)^2)^2
---> 지수가 짝수 일때? 지수를 반으로 나눠서 곱함
       홀수? 지수에서 1을 뺀 나머지를 반으로 나눠서 곱하고 한번더 곱
--> 수행시간 O(log(2) N)

3. Fib
F2 F1 -> 1 1
F1 F0 -> 1 0
--->
Fn+1 Fn -> 1 1 ^ N -> 1 1 ^ (n/2) * 1 1 ^ (n/2)
Fn  Fn-1 -> 1 0       -> 1 0              1 0

---> O(log(2)N)

